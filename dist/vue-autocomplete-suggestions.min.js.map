{"version":3,"file":"vue-autocomplete-suggestions.min.js","sources":["../src/DefaultSuggestionComponent.vue","../src/MinAutocomplete.vue"],"sourcesContent":["<template functional>\n  <span>{{ JSON.stringify(props.suggestion) }} {{ props.active }}</span>\n</template>\n\n<script lang=\"ts\">\nimport Vue from 'vue'\n\nexport default Vue.extend({\n  props: {\n    suggestion: {\n      required: true,\n      type: [Number, Object, Array, String],\n    },\n    active: {\n      type: Boolean,\n      required: true,\n    },\n  },\n})\n</script>\n","<template>\n  <section class=\"vue-autocomplete\" v-click-outside=\"hideSuggestions\">\n    <div>\n      <input ref=\"input\" v-bind=\"inputAttributes\" v-on=\"inputListeners\" type=\"text\">\n      <!-- Image by Font Awesome (http://fontawesome.io), License: CC BY 4.0 -->\n      <img ref=\"resetSearch\" src=\"./resetSearchIcon.svg\" alt=\"reset search\" @click=\"resetSearch\">\n    </div>\n\n    <ul v-show=\"showSuggestions\" ref=\"suggestions\">\n      <li v-for=\"(suggestion, index) in suggestions\" :key=\"getSuggestionText(suggestion)\" @click=\"selectSuggestion(suggestion)\" @mouseover=\"selectionIndex = index\" @mouseleave=\"selectionIndex = -1\" ref=\"suggestion\">\n        <component :is=\"suggestionComponent\" :suggestion=\"suggestion\" :active=\"index===selectionIndex\" />\n      </li>\n      <li v-if=\"suggestions.length===0\" @mouseover=\"hovered=true\">\n        No results\n      </li>\n    </ul>\n  </section>\n</template>\n\n<script lang=\"ts\">\nimport Vue, { VNode } from 'vue'\nimport DefaultSuggestionComponent from './DefaultSuggestionComponent.vue'\n\ninterface Data {\n  selectionIndex: number\n  showSuggestions: boolean\n}\n\nexport default Vue.extend({\n  name: 'VueAutocomplete',\n  directives: {\n    /** detect a click outside of the input and the suggestions\n     to hide the suggestions */\n    clickOutside: {\n      isFn: true,\n      bind(element: any, binding: any, vnode: VNode) {\n        element.event = (event: Event) => {\n          const { input, resetSearch, suggestions } = vnode.context!.$refs\n\n          // check if the click was outside the components\n          if (\n            input !== event.target &&\n            resetSearch !== event.target &&\n            // @ts-ignore\n            !suggestions.contains(event.target)\n          ) {\n            // if it was, call method provided in attribute value\n            // @ts-ignore\n            vnode.context[binding.expression](event)\n          }\n        }\n        document.body.addEventListener('click', element.event)\n      },\n      unbind(element: any) {\n        document.body.removeEventListener('click', element.event)\n      },\n    },\n  },\n  inheritAttrs: false,\n  props: {\n    getSuggestionText: {\n      type: Function,\n      default(suggestion: any) {\n        return JSON.stringify(suggestion)\n      },\n    },\n    suggestionComponent: {\n      default: DefaultSuggestionComponent,\n      type: Function,\n    },\n    suggestions: {\n      type: Array,\n      required: true,\n    },\n    value: {\n      type: String,\n      required: true,\n    },\n  },\n  data(): Data {\n    return {\n      showSuggestions: false,\n      selectionIndex: -1,\n    }\n  },\n  computed: {\n    inputListeners(): object {\n      return {\n        ...this.$listeners,\n        input: (event: Event) => {\n          this.handleInput()\n          this.$emit('input', (event.target as HTMLInputElement).value)\n        },\n        click: (event: Event) => {\n          this.handleClick()\n          this.$emit('click', event)\n        },\n        keydown: (event: KeyboardEvent) => {\n          const key = event.keyCode\n          const selectionUpKeys = [33, 38]\n          const selectionDownKeys = [34, 40]\n          const selectKeys = [13, 36]\n          const hideSuggestionsKeys = [27, 35]\n\n          if (selectionUpKeys.includes(key)) {\n            this.handleKeyUp()\n          } else if (selectionDownKeys.includes(key)) {\n            this.handleKeyDown()\n          } else if (selectKeys.includes(key)) {\n            this.handleKeyEnter()\n          } else if (hideSuggestionsKeys.includes(key)) {\n            this.handleKeyEscape()\n          }\n\n          this.$emit('keydown', event)\n        },\n      }\n    },\n    inputAttributes(): object {\n      return {\n        ...this.$attrs,\n        // @ts-ignore\n        value: this.value,\n      }\n    },\n  },\n  watch: {\n    value(newValue) {\n      if (newValue === '') {\n        this.showSuggestions = false\n      }\n    },\n  },\n  methods: {\n    handleClick() {\n      // @ts-ignore\n      if (this.value !== '') {\n        this.showSuggestions = true\n      }\n    },\n    handleKeyDown() {\n      // if its at the bottom, move to top\n      // if its not at the bottom move up by 1\n      // @ts-ignore\n      this.selectionIndex = (this.selectionIndex + 1) % this.suggestions.length\n      this.scrollToCurrentSuggestion()\n    },\n    handleKeyEnter() {\n      const index = this.selectionIndex\n      // @ts-ignore\n      if (0 <= index && index < this.suggestions.length) {\n        // @ts-ignore\n        const currentSuggestion = this.suggestions[index]\n        // TODO: remove side effect\n        this.selectSuggestion(currentSuggestion)\n      }\n    },\n    handleKeyEscape() {\n      this.hideSuggestions()\n      const inputElement = this.$refs.input as HTMLInputElement\n      inputElement.blur()\n    },\n    handleKeyUp() {\n      // if its at the top, move to bottom\n      // if its not at the top move up by 1\n      this.selectionIndex =\n        // @ts-ignore\n        (this.selectionIndex - 1 + this.suggestions.length) %\n        // @ts-ignore\n        this.suggestions.length\n\n      this.scrollToCurrentSuggestion()\n    },\n    handleInput() {\n      this.showSuggestions = true\n      this.selectionIndex = -1\n    },\n    hideSuggestions() {\n      console.log('hide')\n\n      if (this.showSuggestions) {\n        this.showSuggestions = false\n        this.selectionIndex = -1\n      }\n    },\n    resetSearch() {\n      this.$emit('input', '')\n      // @ts-ignore\n      this.$refs.input.focus()\n    },\n    selectSuggestion(suggestion: any) {\n      this.hideSuggestions()\n      // @ts-ignore\n      this.$emit('input', this.getSuggestionText(suggestion))\n    },\n\n    scrollToCurrentSuggestion() {\n      // TODO:\n      // const suggestionItems = this.$refs.suggestionItems as any\n      // const selectedSuggestionItem = suggestionItems[this.selectionIndex]\n      // if (selectedSuggestionItem && selectedSuggestionItem.scrollIntoView) {\n      //   selectedSuggestionItem.scrollIntoView(false)\n      // }\n    },\n  },\n})\n</script>\n\n<style>\nhtml,\nbody {\n  height: 100%;\n}\nsection {\n  position: relative;\n  width: 300px;\n}\n\nimg {\n  position: absolute;\n  height: 0.85rem;\n  width: 0.85rem;\n  right: 0.5rem;\n  top: 50%;\n  transform: translateY(-50%);\n  cursor: pointer;\n  padding: 0.2rem;\n}\n\ninput {\n  width: 100%;\n  box-sizing: border-box;\n}\nul {\n  position: absolute;\n  padding-left: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n  width: 100%;\n  overflow-y: auto;\n  max-height: 300px;\n}\n\nli {\n  list-style: none;\n  cursor: pointer;\n  user-select: none;\n}\n</style>\n"],"names":["extend","Number","Object","Array","String","Boolean","__assign","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","Vue","element","binding","vnode","event","_a","context","$refs","input","resetSearch","suggestions","target","contains","expression","body","addEventListener","removeEventListener","Function","suggestion","JSON","stringify","DefaultSuggestionComponent","_this","this","$listeners","handleInput","$emit","value","handleClick","key","keyCode","includes","handleKeyUp","handleKeyDown","handleKeyEnter","handleKeyEscape","$attrs","newValue","showSuggestions","selectionIndex","scrollToCurrentSuggestion","index","currentSuggestion","selectSuggestion","hideSuggestions","blur","log","focus","getSuggestionText"],"mappings":"uRAoBmBA,+NAGG,QACHC,OAAQC,OAAQC,MAAOC,sBAGxBC,kBACI,MC4NlBC,EAAsCJ,OAAOK,QAAU,SAASC,OAC3D,IAAIC,EAAGC,EAAI,EAAGC,EAAIC,UAAUC,OAAQH,EAAIC,EAAGD,QAEvC,IAAII,OADLF,UAAUF,GACOR,OAAOa,UAAUC,eAAeC,KAAKR,EAAGK,KACzDN,EAAEM,GAAKL,EAAEK,WAEVN,UAIIU,EAAIlB,mkCACT,kDAKQ,OACA,SAAUmB,EAASC,EAASC,KACtBC,MAAQ,SAAUA,OAClBC,EAAKF,EAAMG,QAAQC,MAAOC,EAAQH,EAAGG,MAAOC,EAAcJ,EAAGI,YAAaC,EAAcL,EAAGK,YAE3FF,IAAUJ,EAAMO,QAChBF,IAAgBL,EAAMO,QAErBD,EAAYE,SAASR,EAAMO,WAGtBL,QAAQJ,EAAQW,YAAYT,aAGjCU,KAAKC,iBAAiB,QAASd,EAAQG,eAE5C,SAAUH,YACLa,KAAKE,oBAAoB,QAASf,EAAQG,wBAIjD,iCAGAa,iBACK,SAAUC,UACVC,KAAKC,UAAUF,kCAIfG,OACLJ,4BAGAhC,gBACI,eAGJC,iBACI,SAGZ,mCAEmB,kBACA,6BAIL,eACRoC,EAAQC,YACLnC,KAAamC,KAAKC,kBAAqB,SAAUpB,KAC1CqB,gBACAC,MAAM,QAAStB,EAAMO,OAAOgB,cAC5B,SAAUvB,KACVwB,gBACAF,MAAM,QAAStB,YACb,SAAUA,OACdyB,EAAMzB,EAAM0B,SACO,GAAI,IAIPC,SAASF,KACnBG,eAJe,GAAI,IAMFD,SAASF,KAC1BI,iBANQ,GAAI,IAQFF,SAASF,KACnBK,kBARiB,GAAI,IAUFH,SAASF,MAC5BM,oBAEJT,MAAM,UAAWtB,uBAGlB,kBACNhB,KAAamC,KAAKa,cAEdb,KAAKI,uBAIb,SAAUU,GACI,KAAbA,SACKC,iBAAkB,0BAKlB,WAEU,KAAff,KAAKI,aACAW,iBAAkB,kBAGhB,gBAINC,gBAAkBhB,KAAKgB,eAAiB,GAAKhB,KAAKb,YAAYf,YAC9D6C,4CAEO,eACRC,EAAQlB,KAAKgB,kBAEb,GAAKE,GAASA,EAAQlB,KAAKb,YAAYf,OAAQ,KAE3C+C,EAAoBnB,KAAKb,YAAY+B,QAEpCE,iBAAiBD,qBAGb,gBACRE,kBACcrB,KAAKhB,MAAMC,MACjBqC,oBAEJ,gBAGJN,gBAEAhB,KAAKgB,eAAiB,EAAIhB,KAAKb,YAAYf,aAEnCe,YAAYf,YACpB6C,yCAEI,gBACJF,iBAAkB,OAClBC,gBAAkB,mBAEV,mBACLO,IAAI,QACRvB,KAAKe,uBACAA,iBAAkB,OAClBC,gBAAkB,gBAGlB,gBACJb,MAAM,QAAS,SAEfnB,MAAMC,MAAMuC,0BAEH,SAAU7B,QACnB0B,uBAEAlB,MAAM,QAASH,KAAKyB,kBAAkB9B,+BAEpB"}